{"ast":null,"code":"var _jsxFileName = \"/Users/duaa/Development/Project-Library/src/Components/BookItem.js\";\nimport React from 'react';\nimport { Card, Button, CardGroup } from 'react-bootstrap';\n\nconst BookItem = _ref => {\n  let {\n    book\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardGroup, {\n    className: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: '18rem',\n      height: '15rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Img, {\n    fluid: \"true\",\n    variant: \"top\",\n    src: book.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, book.title), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, \"Author: \", book.author), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, \"Genre:\", book.genre.map(genre => ` ${genre} - `), \" \"), /*#__PURE__*/React.createElement(Button, {\n    variant: book.available ? \"success\" : \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, book.available ? \"Available\" : \"Unavailable\")))));\n};\n\nexport default BookItem;","map":{"version":3,"sources":["/Users/duaa/Development/Project-Library/src/Components/BookItem.js"],"names":["React","Card","Button","CardGroup","BookItem","book","width","height","image","title","author","genre","map","available"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,SAAtB,QAAsC,iBAAtC;;AAEA,MAAMC,QAAQ,GAAG,QAAY;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AAEzB,sBACA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,OAAT;AAAmBC,MAAAA,MAAM,EAAE;AAA3B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,GAAN;AAAU,IAAA,KAAK,EAAC,MAAhB;AAAuB,IAAA,OAAO,EAAC,KAA/B;AAAqC,IAAA,GAAG,EAAEF,IAAI,CAACG,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaH,IAAI,CAACI,KAAlB,CADA,eAEA,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAoBJ,IAAI,CAACK,MAAzB,CAFA,eAGA,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAmBL,IAAI,CAACM,KAAL,CAAWC,GAAX,CAAeD,KAAK,IAAK,IAAGA,KAAM,KAAlC,CAAnB,MAHA,eAIA,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEN,IAAI,CAACQ,SAAL,GAAiB,SAAjB,GAA6B,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,IAAI,CAACQ,SAAL,GAAiB,WAAjB,GAA+B,aADpC,CAJA,CAFJ,CADJ,CADJ,CADA;AAgBH,CAlBD;;AAoBA,eAAeT,QAAf","sourcesContent":["import React from 'react';\nimport {Card, Button, CardGroup} from 'react-bootstrap';\n\nconst BookItem = ({book}) => {\n  \n    return (\n    <div className='cards'>\n        <CardGroup className='cards'>\n            <Card style={{ width: '18rem' , height: '15rem' }}>\n                <Card.Img fluid=\"true\" variant=\"top\" src={book.image} />\n                <Card.Body>\n                <Card.Title>{book.title}</Card.Title>\n                <Card.Text>Author: {book.author}</Card.Text>\n                <Card.Text>Genre:{ book.genre.map(genre => ` ${genre} - `)} </Card.Text>\n                <Button variant={book.available ? \"success\" : \"danger\"}>\n                    {book.available ? \"Available\" : \"Unavailable\"}</Button>\n            </Card.Body>\n            </Card>\n        </CardGroup>\n    </div>\n  );\n};\n\nexport default BookItem;\n"]},"metadata":{},"sourceType":"module"}