{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\majdc\\\\Development\\\\Phase2\\\\Project-Library\\\\src\\\\Components\\\\AddBookModal.js\";\nimport React, { useState } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport booksStore from \"../Stores/bookStore\";\n\nconst AddBookModal = _ref => {\n  let {\n    isShowing,\n    handleClose\n  } = _ref;\n  const [selectedGenre, setSelectedGenre] = useState([]);\n  const [book, setBook] = useState({\n    title: \"\",\n    author: \"\",\n    genre: []\n  });\n\n  const handleChange = event => {\n    if (event.target.name === \"genre\") setSelectedGenre([...selectedGenre, event.target.value]);\n    setBook({ ...book,\n      [event.target.name]: event.target.value,\n      genre: selectedGenre\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    booksStore.addBook(book);\n    handleClose();\n  };\n\n  const genre = [\"Self-Help\", \"Sci-Fi\", \"Thriller\", \"Suspense\", \"Fantasy\", \"Biography\", \"Business\", \"Entrepreneurship\", \"Crime\", \"Mystery\", \"Fiction\"];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    show: isShowing,\n    onHide: handleClose,\n    backdrop: \"static\",\n    keyboard: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Add a new book\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Book Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n    onChange: handleChange,\n    name: \"title\",\n    type: \"text\",\n    placeholder: \"Book Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Author\"), /*#__PURE__*/React.createElement(Form.Control, {\n    onChange: handleChange,\n    name: \"author\",\n    type: \"text\",\n    placeholder: \"Author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Genre: \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }), genre.map(genre => /*#__PURE__*/React.createElement(Form.Check, {\n    inline: true,\n    label: genre,\n    name: \"genre\",\n    type: \"checkbox\",\n    id: `inline-checkbox-1`,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"mb-3\",\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    className: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"Image:\"), /*#__PURE__*/React.createElement(Form.Control, {\n    onChange: handleChange,\n    name: \"Image\",\n    type: \"text\",\n    placeholder: \"Image URL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, \"Submit\"))))));\n};\n\nexport default AddBookModal;","map":{"version":3,"sources":["C:/Users/majdc/Development/Phase2/Project-Library/src/Components/AddBookModal.js"],"names":["React","useState","Modal","Button","Form","booksStore","AddBookModal","isShowing","handleClose","selectedGenre","setSelectedGenre","book","setBook","title","author","genre","handleChange","event","target","name","value","handleSubmit","preventDefault","addBook","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport booksStore from \"../Stores/bookStore\";\r\n\r\nconst AddBookModal = ({ isShowing, handleClose }) => {\r\n  const [selectedGenre, setSelectedGenre] = useState([]);\r\n  const [book, setBook] = useState({\r\n    title: \"\",\r\n    author: \"\",\r\n    genre: [],\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    if (event.target.name === \"genre\")\r\n      setSelectedGenre([...selectedGenre, event.target.value]);\r\n    setBook({\r\n      ...book,\r\n      [event.target.name]: event.target.value,\r\n      genre: selectedGenre,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    booksStore.addBook(book);\r\n    handleClose();\r\n  };\r\n\r\n  const genre = [\r\n    \"Self-Help\",\r\n    \"Sci-Fi\",\r\n    \"Thriller\",\r\n    \"Suspense\",\r\n    \"Fantasy\",\r\n    \"Biography\",\r\n    \"Business\",\r\n    \"Entrepreneurship\",\r\n    \"Crime\",\r\n    \"Mystery\",\r\n    \"Fiction\",\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <>\r\n        <Modal\r\n          show={isShowing}\r\n          onHide={handleClose}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Add a new book</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label className=\"required\">Book Title</Form.Label>\r\n                <Form.Control\r\n                  onChange={handleChange}\r\n                  name=\"title\"\r\n                  type=\"text\"\r\n                  placeholder=\"Book Title\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label className=\"required\">Author</Form.Label>\r\n                <Form.Control\r\n                  onChange={handleChange}\r\n                  name=\"author\"\r\n                  type=\"text\"\r\n                  placeholder=\"Author\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label className=\"required\">Genre: </Form.Label>\r\n                <br />\r\n                {genre.map((genre) => (\r\n                  <Form.Check\r\n                    inline\r\n                    label={genre}\r\n                    name=\"genre\"\r\n                    type={\"checkbox\"}\r\n                    id={`inline-checkbox-1`}\r\n                    onChange={handleChange}\r\n                  />\r\n                ))}\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label className=\"required\">Image:</Form.Label>\r\n                <Form.Control\r\n                  onChange={handleChange}\r\n                  name=\"Image\"\r\n                  type=\"text\"\r\n                  placeholder=\"Image URL\"\r\n                />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\nexport default AddBookModal;\r\n"]},"metadata":{},"sourceType":"module"}